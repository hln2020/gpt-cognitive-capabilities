{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMtz8Dr0/35kDu5Yy5ixIBT"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["pip install openai"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zAkGc-a7ZBFO","executionInfo":{"status":"ok","timestamp":1683331774742,"user_tz":240,"elapsed":20066,"user":{"displayName":"Cecilia Wu","userId":"04367311798067418504"}},"outputId":"6e6a911b-5e77-45b2-b0cd-55623699ec7a"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting openai\n","  Downloading openai-0.27.6-py3-none-any.whl (71 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m71.9/71.9 kB\u001b[0m \u001b[31m1.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting aiohttp\n","  Downloading aiohttp-3.8.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m14.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: requests>=2.20 in /usr/local/lib/python3.10/dist-packages (from openai) (2.27.1)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from openai) (4.65.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (2022.12.7)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (3.4)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (1.26.15)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai) (2.0.12)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai) (23.1.0)\n","Collecting frozenlist>=1.1.1\n","  Downloading frozenlist-1.3.3-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (149 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m149.6/149.6 kB\u001b[0m \u001b[31m2.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting aiosignal>=1.1.2\n","  Downloading aiosignal-1.3.1-py3-none-any.whl (7.6 kB)\n","Collecting async-timeout<5.0,>=4.0.0a3\n","  Downloading async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\n","Collecting yarl<2.0,>=1.0\n","  Downloading yarl-1.9.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (268 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m268.8/268.8 kB\u001b[0m \u001b[31m12.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting multidict<7.0,>=4.5\n","  Downloading multidict-6.0.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (114 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m114.5/114.5 kB\u001b[0m \u001b[31m1.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: multidict, frozenlist, async-timeout, yarl, aiosignal, aiohttp, openai\n","Successfully installed aiohttp-3.8.4 aiosignal-1.3.1 async-timeout-4.0.2 frozenlist-1.3.3 multidict-6.0.4 openai-0.27.6 yarl-1.9.2\n"]}]},{"cell_type":"code","source":["import openai\n","import numpy as np\n","from sklearn.utils import shuffle\n","\n","text = \"You have previously observed the following chemical substances in different wine casks:\\n\"\n","\n","def act(text):\n","    openai.api_key = \"\"\n","    response = openai.Completion.create(\n","        engine = 'text-davinci-002',\n","        prompt = text,\n","        max_tokens = 100,\n","        temperature = 0.0,\n","        suffix = ' casks.'\n","    )\n","    return response.choices[0].text\n","\n","data = np.array([\n","    [1, 1, 1],\n","    [1, 1, 1],\n","    [1, 1, 1],\n","    [1, 1, 1],\n","    [1, 1, 1],\n","    [1, 1, 1],\n","    [1, 1, 1],\n","    [1, 1, 1],\n","    [0, 0, 0],\n","    [0, 0, 0],\n","    [0, 0, 0],\n","    [0, 0, 0],\n","    [0, 0, 0],\n","    [0, 0, 0],\n","    [0, 0, 0],\n","    [0, 0, 0],\n","    [1, 0, 1],\n","    [0, 1, 0],\n","    [1, 1, 0],\n","    [0, 0, 1]\n","])\n","\n","print(data.shape)\n","data = shuffle(data)\n","\n","for i in range(data.shape[0]):\n","    text += \"- Cask \" + str(i+1) + \": \"\n","    if data[i, 0]:\n","        text += \"substance A was present, \"\n","    else:\n","        text += \"substance A was absent, \"\n","    if data[i, 1]:\n","        text += \"substance B was present, \"\n","    else:\n","        text += \"substance B was absent, \"\n","    if data[i, 2]:\n","        text += \"substance C was present.\\n\"\n","    else:\n","        text += \"substance C was absent.\\n\"\n","\n","\n","text += \"\\nYou have the following additional information from previous research:\\n\"\\\n","        \"- Substance A likely causes the production of substance B.\\n\"\\\n","        \"- Substance A likely causes the production of substance C.\\n\\n\"\n","\n","\n","observation_text1 = text + \"Imagine that you test 20 new casks in which you know that substance B is present. \\nQ: How many of these new casks will contain substance C on average?\\n\"\\\n","    \"A:\"\n","\n","observation_text2 = text + \"Imagine that you test 20 new casks in which you know that substance B is absent. \\nQ: How many of these new casks will contain substance C on average?\\n\"\\\n","    \"A:\"\n","\n","intervention_text1 = text + \"Imagine that you test 20 new casks in which you have manually added substance B. \\nQ: How many of these new casks will contain substance C on average?\\n\"\\\n","    \"A:\"\n","\n","intervention_text2 = text + \"Imagine that you test 20 new casks in which you have manually removed substance B. \\nQ: How many of these new casks will contain substance C on average?\\n\"\\\n","    \"A:\"\n","\n","print(intervention_text1)\n","\n","\n","# action = act(intervention_text1)\n","# print(action)\n","\n","# action = act(intervention_text2)\n","# print(action)\n","\n","# action = act(observation_text1)\n","# print(action)\n","\n","# action = act(observation_text2)\n","# print(action)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WvQrKnlRW3gn","executionInfo":{"status":"ok","timestamp":1683335493291,"user_tz":240,"elapsed":1734,"user":{"displayName":"Cecilia Wu","userId":"04367311798067418504"}},"outputId":"b946359f-5d34-4e07-e003-c573c32dd0c1"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["(20, 3)\n","You have previously observed the following chemical substances in different wine casks:\n","- Cask 1: substance A was absent, substance B was absent, substance C was present.\n","- Cask 2: substance A was present, substance B was present, substance C was present.\n","- Cask 3: substance A was absent, substance B was absent, substance C was absent.\n","- Cask 4: substance A was absent, substance B was absent, substance C was absent.\n","- Cask 5: substance A was present, substance B was present, substance C was present.\n","- Cask 6: substance A was absent, substance B was absent, substance C was absent.\n","- Cask 7: substance A was present, substance B was present, substance C was present.\n","- Cask 8: substance A was absent, substance B was absent, substance C was absent.\n","- Cask 9: substance A was present, substance B was absent, substance C was present.\n","- Cask 10: substance A was absent, substance B was absent, substance C was absent.\n","- Cask 11: substance A was absent, substance B was absent, substance C was absent.\n","- Cask 12: substance A was present, substance B was present, substance C was absent.\n","- Cask 13: substance A was absent, substance B was absent, substance C was absent.\n","- Cask 14: substance A was present, substance B was present, substance C was present.\n","- Cask 15: substance A was present, substance B was present, substance C was present.\n","- Cask 16: substance A was absent, substance B was absent, substance C was absent.\n","- Cask 17: substance A was present, substance B was present, substance C was present.\n","- Cask 18: substance A was present, substance B was present, substance C was present.\n","- Cask 19: substance A was absent, substance B was present, substance C was absent.\n","- Cask 20: substance A was present, substance B was present, substance C was present.\n","\n","You have the following additional information from previous research:\n","- Substance A likely causes the production of substance B.\n","- Substance A likely causes the production of substance C.\n","\n","Imagine that you test 20 new casks in which you have manually added substance B. \n","Q: How many of these new casks will contain substance C on average?\n","A:\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Rn7jRj35Wx01"},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","import seaborn as sns\n","\n","plt.rcParams[\"figure.figsize\"] = (3.46327,2.3)\n","\n","conditions = ['common_cause', 'causal_chain']\n","\n","for i, condition in enumerate(conditions):\n","    plt.figure(i)\n","    if condition == 'common_cause':\n","        ideal = [10, 10, 16, 4]\n","        human = [9.04, 6.26, 14.79, 3.29]\n","        gpt3 = [10, 10, 15, 10]\n","    elif condition == 'causal_chain':\n","        ideal = [16, 4, 16, 4]\n","        human = [14.04, 3.08, 13.67, 3.08]\n","        gpt3 = [10, 10, 15, 10]\n","\n","    plt.bar(np.arange(4), ideal, width=0.25, alpha=0.7, color='C2')\n","    plt.bar(np.arange(4)+0.25, human, width=0.25, alpha=0.7, color='C1')\n","    plt.bar(np.arange(4)+0.5, gpt3, width=0.25, alpha=0.7, color='C0')\n","    plt.legend(['Ideal', 'Human', 'GPT-3'], frameon=False, bbox_to_anchor=(-0.0,1.02,1,0.2), loc=\"lower left\",  borderaxespad=0, ncol=3, handlelength=1.5, handletextpad=0.5, mode='expand')\n","    plt.xticks([0.25, 1.25, 2.25, 3.25], [r'$do(B = 1)$', r'$do(B = 0)$', r'$B = 1$', r'$B = 0$'])\n","    plt.ylabel('Reponse')\n","    plt.ylim(0, 16.5)\n","    sns.despine()\n","    plt.tight_layout()\n","    plt.savefig(\"figures/\" + condition + \"_model.pdf\", bbox_inches='tight')\n","    #plt.show()"]}]}